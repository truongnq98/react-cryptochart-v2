{"version":3,"sources":["../../../src/lib/interactive/FreeLine.js"],"names":["FreeLine","props","handleStart","bind","handleEnd","handleDrawLine","handleDragLine","handleDragLineComplete","terminate","saveNodeType","getSelectionState","state","nodes","index","newXYValue","setState","override","moreProps","trends","newTrends","map","each","idx","positionList","selected","onComplete","xyValue","current","length","mouseMoved","push","e","Array","onStart","appearance","d","enabled","snap","shouldDisableSnap","snapTo","currentPositionRadius","currentPositionStroke","currentPositionstrokeOpacity","currentPositionStrokeWidth","hoverText","tempLine","stroke","strokeWidth","fill","fillOpacity","strokeOpacity","eachAppearance","type","strokeDasharray","edgeStroke","edgeFill","edgeStrokeWidth","r","Component","propTypes","PropTypes","bool","isRequired","func","onSelect","string","number","object","array","shape","oneOf","strokeDashTypes","defaultProps","noop","button","shiftKey","HoverTextNearMouse","enable","bgHeight","bgWidth","text"],"mappings":"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","file":"FreeLine.js","sourcesContent":["\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isDefined, isNotDefined, noop, strokeDashTypes } from \"../utils\";\n\nimport {\n\tgetValueFromOverride,\n\tterminate,\n\tsaveNodeType,\n\tisHoverForInteractiveType,\n} from \"./utils\";\n\nimport EachFreeLine from \"./wrapper/EachFreeLine\";\nimport FreeLineComponent from \"./components/FreeLine\";\nimport MouseLocationIndicator from \"./components/MouseLocationIndicator\";\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\n\nclass FreeLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleStart = this.handleStart.bind(this);\n\t\tthis.handleEnd = this.handleEnd.bind(this);\n\t\tthis.handleDrawLine = this.handleDrawLine.bind(this);\n\t\tthis.handleDragLine = this.handleDragLine.bind(this);\n\t\tthis.handleDragLineComplete = this.handleDragLineComplete.bind(this);\n\n\t\tthis.terminate = terminate.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"trends\")\n\t\t\t.bind(this);\n\n\t\tthis.state = {\n\t\t};\n\t\tthis.nodes = [];\n\t}\n\thandleDragLine(index, newXYValue) {\n\t\tthis.setState({\n\t\t\toverride: {\n\t\t\t\tindex,\n\t\t\t\t...newXYValue\n\t\t\t}\n\t\t});\n\t}\n\thandleDragLineComplete(moreProps) {\n\t\tconst { override } = this.state;\n\t\tif (isDefined(override)) {\n\t\t\tconst { trends } = this.props;\n\t\t\tconst newTrends = trends\n\t\t\t\t.map((each, idx) => idx === override.index\n\t\t\t\t\t? {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tpositionList: override.positionList,\n\t\t\t\t\t\tselected: true,\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tselected: false,\n\t\t\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\toverride: null,\n\t\t\t}, () => {\n\t\t\t\tthis.props.onComplete(newTrends, moreProps);\n\t\t\t});\n\t\t}\n\t}\n\thandleDrawLine(xyValue) {\n\t\tconst { current } = this.state;\n\t\tif (isDefined(current) && isDefined(current.positionList.length > 0)) {\n\t\t\tthis.mouseMoved = true;\n\t\t\tconst positionList = current.positionList;\n\t\t\tpositionList.push(xyValue);\n\t\t\tthis.setState({\n\t\t\t\tcurrent: {\n\t\t\t\t\tpositionList,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleStart(xyValue, moreProps, e) {\n\t\tconst { current } = this.state;\n\t\tif (isNotDefined(current) || isNotDefined(current.positionList)) {\n\t\t\tthis.mouseMoved = false;\n\t\t\tconst positionList = new Array();\n\t\t\tpositionList.push(xyValue);\n\t\t\tthis.setState({\n\t\t\t\tcurrent: {\n\t\t\t\t\tpositionList,\n\t\t\t\t},\n\t\t\t}, () => {\n\t\t\t\tthis.props.onStart(moreProps, e);\n\t\t\t});\n\t\t}\n\t}\n\thandleEnd(xyValue, moreProps, e) {\n\t\tconst { current } = this.state;\n\t\tconst { trends, appearance } = this.props;\n\t\tif (this.mouseMoved\n\t\t\t&& isDefined(current)\n\t\t\t&& isDefined(current.positionList.length > 100)\n\t\t) {\n\t\t\tconst positionList = current.positionList;\n\t\t\tpositionList.push(xyValue);\n\t\t\tconst newTrends = [\n\t\t\t\t...trends.map(d => ({ ...d, selected: false })),\n\t\t\t\t{\n\t\t\t\t\tpositionList,\n\t\t\t\t\tselected: true,\n\t\t\t\t\tappearance,\n\t\t\t\t}\n\t\t\t];\n\t\t\tthis.setState({\n\t\t\t\tcurrent: null,\n\t\t\t\ttrends: newTrends\n\t\t\t}, () => {\n\t\t\t\tthis.props.onComplete(newTrends, moreProps, e);\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst { appearance } = this.props;\n\t\tconst { enabled, snap, shouldDisableSnap, snapTo } = this.props;\n\t\tconst { currentPositionRadius, currentPositionStroke } = this.props;\n\t\tconst { currentPositionstrokeOpacity, currentPositionStrokeWidth } = this.props;\n\t\tconst { hoverText, trends } = this.props;\n\t\tconst { current, override } = this.state;\n\n\t\tconst tempLine = isDefined(current) && isDefined(current.positionList.length > 0)\n\t\t\t? <FreeLineComponent\n\t\t\t\tnoHover\n\t\t\t\tpositionList={current.positionList}\n\t\t\t\tstroke={appearance.stroke}\n\t\t\t\tstrokeWidth={appearance.strokeWidth}\n\t\t\t\tfill={appearance.fill}\n\t\t\t\tfillOpacity={appearance.fillOpacity}\n\t\t\t\tstrokeOpacity={appearance.strokeOpacity} />\n\t\t\t: null;\n\n\t\treturn <g>\n\t\t\t{trends.map((each, idx) => {\n\t\t\t\tconst eachAppearance = isDefined(each.appearance)\n\t\t\t\t\t? { ...appearance, ...each.appearance }\n\t\t\t\t\t: appearance;\n\n\t\t\t\treturn <EachFreeLine key={idx}\n\t\t\t\t\tref={this.saveNodeType(idx)}\n\t\t\t\t\tindex={idx}\n\t\t\t\t\ttype={each.type}\n\t\t\t\t\tselected={each.selected}\n\t\t\t\t\tpositionList={getValueFromOverride(override, idx, \"positionList\", each.positionList)}\n\t\t\t\t\tstroke={eachAppearance.stroke}\n\t\t\t\t\tstrokeWidth={eachAppearance.strokeWidth}\n\t\t\t\t\tstrokeOpacity={eachAppearance.strokeOpacity}\n\t\t\t\t\tstrokeDasharray={eachAppearance.strokeDasharray}\n\t\t\t\t\tedgeStroke={eachAppearance.edgeStroke}\n\t\t\t\t\tedgeFill={eachAppearance.edgeFill}\n\t\t\t\t\tedgeStrokeWidth={eachAppearance.edgeStrokeWidth}\n\t\t\t\t\tfill={appearance.fill}\n\t\t\t\t\tfillOpacity={appearance.fillOpacity}\n\t\t\t\t\tr={eachAppearance.r}\n\t\t\t\t\thoverText={hoverText}\n\t\t\t\t\tonDrag={this.handleDragLine}\n\t\t\t\t\tonDragComplete={this.handleDragLineComplete}\n\t\t\t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t\tlineInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t/>;\n\t\t\t})}\n\t\t\t{tempLine}\n\t\t\t<MouseLocationIndicator\n\t\t\t\tenabled={enabled}\n\t\t\t\tsnap={snap}\n\t\t\t\tshouldDisableSnap={shouldDisableSnap}\n\t\t\t\tsnapTo={snapTo}\n\t\t\t\tr={currentPositionRadius}\n\t\t\t\tstroke={currentPositionStroke}\n\t\t\t\tstrokeOpacity={currentPositionstrokeOpacity}\n\t\t\t\tstrokeWidth={currentPositionStrokeWidth}\n\t\t\t\tonMouseDown={this.handleStart}\n\t\t\t\tonClick={this.handleEnd}\n\t\t\t\tonMouseMove={this.handleDrawLine}\n\t\t\t/>\n\t\t</g>;\n\t}\n}\n\n\nFreeLine.propTypes = {\n\tsnap: PropTypes.bool.isRequired,\n\tenabled: PropTypes.bool.isRequired,\n\tsnapTo: PropTypes.func,\n\tshouldDisableSnap: PropTypes.func.isRequired,\n\n\tonStart: PropTypes.func.isRequired,\n\tonComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func,\n\n\tcurrentPositionStroke: PropTypes.string,\n\tcurrentPositionStrokeWidth: PropTypes.number,\n\tcurrentPositionstrokeOpacity: PropTypes.number,\n\tcurrentPositionRadius: PropTypes.number,\n\thoverText: PropTypes.object.isRequired,\n\n\ttrends: PropTypes.array.isRequired,\n\n\tappearance: PropTypes.shape({\n\t\tstroke: PropTypes.string.isRequired,\n\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\n\t\tedgeFill: PropTypes.string.isRequired,\n\t\tedgeStroke: PropTypes.string.isRequired,\n\t\tfill: PropTypes.string.isRequired,\n\t\tfillOpacity: PropTypes.number.isRequired,\n\t}).isRequired\n};\n\nFreeLine.defaultProps = {\n\tonStart: noop,\n\tonComplete: noop,\n\tonSelect: noop,\n\n\tcurrentPositionStroke: \"#000000\",\n\tcurrentPositionstrokeOpacity: 1,\n\tcurrentPositionStrokeWidth: 3,\n\tcurrentPositionRadius: 0,\n\n\tshouldDisableSnap: e => (e.button === 2 || e.shiftKey),\n\thoverText: {\n\t\t...HoverTextNearMouse.defaultProps,\n\t\tenable: true,\n\t\tbgHeight: 18,\n\t\tbgWidth: 90,\n\t\ttext: \"Click to select\",\n\t},\n\ttrends: [],\n\n\tappearance: {\n\t\tstroke: \"#000000\",\n\t\tstrokeOpacity: 1,\n\t\tstrokeWidth: 0.7,\n\t\tstrokeDasharray: \"Solid\",\n\t\tedgeStrokeWidth: 1,\n\t\tedgeFill: \"#FFFFFF\",\n\t\tedgeStroke: \"#000000\",\n\t\tr: 6,\n\t\tfill: \"#8AAFE2\",\n\t\tfillOpacity: 0.5,\n\t}\n};\n\nexport default FreeLine;"]}