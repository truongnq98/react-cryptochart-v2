{"version":3,"sources":["../../../src/lib/coordinates/EdgeIndicator.js"],"names":["EdgeIndicator","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","edge","helper","getAxisCanvas","Component","propTypes","yAccessor","PropTypes","func","type","oneOf","className","string","fill","oneOfType","lineStroke","textFill","itemType","isRequired","orient","edgeAt","displayFormat","rectHeight","number","rectWidth","arrowWidth","lineStrokeDasharray","strokeDashTypes","defaultProps","yAxisPad","fontFamily","fontSize","dx","hideLine","opacity","stroke","noop","strokeOpacity","strokeWidth","lineOpacity","plotData","item","getEdge","edgeType","xScale","yScale","chartConfig","xAccessor","width","yValue","xValue","x1","Math","round","y1","left","right","edgeX","coordinate","show","x2","y2"],"mappings":"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","file":"EdgeIndicator.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\n\nimport { drawOnCanvas, renderSVG } from \"./EdgeCoordinateV3\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { first, last, isDefined, functor, noop, strokeDashTypes } from \"../utils\";\n\nclass EdgeIndicator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst edge = helper(this.props, moreProps);\n\t\tconst props = {\n\t\t\t...this.props,\n\t\t\t...edge,\n\t\t};\n\t\tdrawOnCanvas(ctx, props);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst edge = helper(this.props, moreProps);\n\t\tconst props = {\n\t\t\t...this.props,\n\t\t\t...edge,\n\t\t};\n\t\treturn renderSVG(props);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tedgeClip\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nEdgeIndicator.propTypes = {\n\tyAccessor: PropTypes.func,\n\n\ttype: PropTypes.oneOf([\"horizontal\"]),\n\tclassName: PropTypes.string,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\tlineStroke: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\ttextFill: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\titemType: PropTypes.oneOf([\"first\", \"last\"]).isRequired,\n\torient: PropTypes.oneOf([\"left\", \"right\"]),\n\tedgeAt: PropTypes.oneOf([\"left\", \"right\"]),\n\tdisplayFormat: PropTypes.func,\n\trectHeight: PropTypes.number,\n\trectWidth: PropTypes.number,\n\tarrowWidth: PropTypes.number,\n\tlineStrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n};\n\nEdgeIndicator.defaultProps = {\n\tclassName: \"react-stockcharts-edgeindicator\",\n\n\ttype: \"horizontal\",\n\torient: \"left\",\n\tedgeAt: \"left\",\n\ttextFill: \"#FFFFFF\",\n\tdisplayFormat: format(\".2f\"),\n\tyAxisPad: 0,\n\trectHeight: 20,\n\trectWidth: 50,\n\tarrowWidth: 10,\n\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\tfontSize: 13,\n\tdx: 0,\n\thideLine: false,\n\tfill: \"#8a8a8a\",\n\topacity: 1,\n\n\tstroke: noop,\n\tstrokeOpacity: 1,\n\tstrokeWidth: 3,\n\tlineStroke: \"#000000\",\n\tlineOpacity: 0.3,\n\tlineStrokeDasharray: \"ShortDash\",\n};\n\nfunction helper(props, moreProps) {\n\tconst { itemType, yAccessor } = props;\n\tconst { plotData } = moreProps;\n\n\tconst item = itemType === \"first\"\n\t\t? first(plotData, yAccessor)\n\t\t: last(plotData, yAccessor);\n\n\t// var currentItem = ChartDataUtil.getCurrentItemForChartNew(currentItems, forChart);\n\tconst edge = isDefined(item)\n\t\t? getEdge(props, moreProps, item)\n\t\t: null;\n\n\treturn edge;\n}\n\nfunction getEdge(props, moreProps, item) {\n\tconst { type: edgeType, displayFormat, edgeAt, yAxisPad, orient, lineStroke } = props;\n\n\tconst { yAccessor, fill, textFill, rectHeight, rectWidth, arrowWidth } = props;\n\tconst { fontFamily, fontSize } = props;\n\tconst { stroke } = props;\n\n\tconst { xScale, chartConfig: { yScale }, xAccessor, width } = moreProps;\n\n\tconst yValue = yAccessor(item),\n\t\txValue = xAccessor(item);\n\n\tconst x1 = Math.round(xScale(xValue)),\n\t\ty1 = Math.round(yScale(yValue));\n\n\tconst [left, right] = [0, width];\n\tconst edgeX = edgeAt === \"left\"\n\t\t? left - yAxisPad\n\t\t: right + yAxisPad;\n\n\treturn {\n\t\t// ...props,\n\t\tcoordinate: displayFormat(yValue),\n\t\tshow: true,\n\t\ttype: edgeType,\n\t\torient,\n\t\tedgeAt: edgeX,\n\t\tfill: functor(fill)(item),\n\t\tlineStroke: functor(lineStroke)(item),\n\t\tstroke: functor(stroke)(item),\n\t\tfontFamily, fontSize,\n\t\ttextFill: functor(textFill)(item),\n\t\trectHeight, rectWidth, arrowWidth,\n\t\tx1,\n\t\ty1,\n\t\tx2: right,\n\t\ty2: y1,\n\t};\n}\n\nexport default EdgeIndicator;\n"]}