{"version":3,"sources":["../../../src/lib/series/KagiSeries.js"],"names":["KagiSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","getAxisCanvas","xScale","yScale","chartConfig","plotData","className","stroke","fill","strokeWidth","paths","helper","map","each","i","dataSeries","x","item","y","curve","curveStepBefore","plot","type","Component","propTypes","PropTypes","string","object","number","isRequired","defaultProps","yang","yin","currentValueStroke","begin","forEach","strokeStyle","lineWidth","beginPath","prevX","d","moveTo","lineTo","lastPlot","length","last","y1","y2","kagiLine","kagi","idx","close","startAs","push","open","changeTo","changePoint","added","current","reverseAt"],"mappings":"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","file":"KagiSeries.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { line, curveStepBefore } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\nimport { isDefined, isNotDefined } from \"../utils\";\n\nclass KagiSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\tdrawOnCanvas(ctx, this.props, moreProps, xAccessor);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { className, stroke, fill, strokeWidth } = this.props;\n\n\t\tconst paths = helper(plotData, xAccessor).map((each, i) => {\n\t\t\tconst dataSeries = line()\n\t\t\t\t.x((item) => xScale(item[0]))\n\t\t\t\t.y((item) => yScale(item[1]))\n\t\t\t\t.curve(curveStepBefore);\n\n\t\t\tdataSeries(each.plot);\n\n\t\t\treturn (<path key={i} d={dataSeries(each.plot)} className={each.type}\n\t\t\t\tstroke={stroke[each.type]} fill={fill[each.type]} strokeWidth={strokeWidth} />);\n\t\t});\n\t\treturn (\n\t\t\t<g className={className}>\n\t\t\t\t{paths}\n\t\t\t</g>\n\t\t);\n\t}\n}\nKagiSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstroke: PropTypes.object,\n\tfill: PropTypes.object,\n\tstrokeWidth: PropTypes.number.isRequired,\n};\n\nKagiSeries.defaultProps = {\n\tclassName: \"react-stockcharts-kagi\",\n\tstrokeWidth: 2,\n\tstroke: {\n\t\tyang: \"#6BA583\",\n\t\tyin: \"#E60000\"\n\t},\n\tfill: {\n\t\tyang: \"none\",\n\t\tyin: \"none\"\n\t},\n\tcurrentValueStroke: \"#000000\",\n};\n\nfunction drawOnCanvas(ctx, props, moreProps, xAccessor) {\n\tconst { stroke, strokeWidth, currentValueStroke } = props;\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\tconst paths = helper(plotData, xAccessor);\n\n\tlet begin = true;\n\n\tpaths.forEach((each) => {\n\t\tctx.strokeStyle = stroke[each.type];\n\t\tctx.lineWidth = strokeWidth;\n\n\t\tctx.beginPath();\n\t\tlet prevX;\n\t\teach.plot.forEach(d => {\n\t\t\tconst [x, y] = [xScale(d[0]), yScale(d[1])];\n\t\t\tif (begin) {\n\t\t\t\tctx.moveTo(x, y);\n\t\t\t\tbegin = false;\n\t\t\t} else {\n\t\t\t\tif (isDefined(prevX)) {\n\t\t\t\t\tctx.lineTo(prevX, y);\n\t\t\t\t}\n\t\t\t\tctx.lineTo(x, y);\n\t\t\t}\n\t\t\tprevX = x;\n\t\t\t// console.log(d);\n\n\t\t});\n\t\tctx.stroke();\n\t});\n\tconst lastPlot = paths[paths.length - 1].plot;\n\tconst last = lastPlot[lastPlot.length - 1];\n\tctx.beginPath();\n\t// ctx.strokeStyle = \"black\";\n\tctx.lineWidth = 1;\n\n\tconst [x, y1, y2] = [xScale(last[0]), yScale(last[2]), yScale(last[3])];\n\t// console.log(last, x, y);\n\tctx.moveTo(x, y1);\n\tctx.lineTo(x + 10, y1);\n\tctx.stroke();\n\n\tctx.beginPath();\n\tctx.strokeStyle = currentValueStroke;\n\tctx.moveTo(x - 10, y2);\n\tctx.lineTo(x, y2);\n\tctx.stroke();\n}\n\nfunction helper(plotData, xAccessor) {\n\tconst kagiLine = [];\n\tlet kagi = {};\n\tlet d = plotData[0];\n\tlet idx = xAccessor(d);\n\n\tfor (let i = 0; i < plotData.length; i++) {\n\t\td = plotData[i];\n\n\t\tif (isNotDefined(d.close)) continue;\n\t\tif (isNotDefined(kagi.type)) kagi.type = d.startAs;\n\t\tif (isNotDefined(kagi.plot)) kagi.plot = [];\n\n\t\tidx = xAccessor(d);\n\t\tkagi.plot.push([idx, d.open]);\n\n\t\tif (isDefined(d.changeTo)) {\n\t\t\tkagi.plot.push([idx, d.changePoint]);\n\t\t\tkagi.added = true;\n\t\t\tkagiLine.push(kagi);\n\n\t\t\tkagi = {\n\t\t\t\ttype: d.changeTo,\n\t\t\t\tplot: [],\n\t\t\t\tadded: false,\n\t\t\t};\n\t\t\tkagi.plot.push([idx, d.changePoint]);\n\t\t}\n\t}\n\n\tif (!kagi.added) {\n\t\tkagi.plot.push([idx, d.close, d.current, d.reverseAt]);\n\t\tkagiLine.push(kagi);\n\t}\n\n\t// console.log(d.reverseAt);\n\n\treturn kagiLine;\n}\n\nexport default KagiSeries;\n"]}