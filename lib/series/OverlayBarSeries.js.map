{"version":3,"sources":["../../../src/lib/series/OverlayBarSeries.js"],"names":["OverlayBarSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","yAccessor","bars","getBars","clip","getAxisCanvas","Component","propTypes","baseAt","PropTypes","oneOfType","number","func","isRequired","direction","oneOf","stroke","bool","widthRatio","opacity","fill","string","className","xAccessor","arrayOf","xScale","yScale","plotData","array","defaultProps","range","width","plotDataLengthBarWidth","chartConfig","getClassName","getFill","getBase","widthFunctor","offset","Math","floor","map","innerBars","eachYAccessor","i","yValue","d","undefined","xValue","x","round","y","filter","b","h","length","height"],"mappings":"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","file":"OverlayBarSeries.js","sourcesContent":["\n\nimport { merge } from \"d3-array\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { drawOnCanvas2, getBarsSVG2 } from \"./StackedBarSeries\";\nimport { isDefined, isNotDefined, first, functor, plotDataLengthBarWidth } from \"../utils\";\n\nclass OverlayBarSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { yAccessor } = this.props;\n\t\tconst bars = getBars(this.props, moreProps, yAccessor);\n\n\t\tdrawOnCanvas2(this.props, ctx, bars);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { yAccessor } = this.props;\n\n\t\tconst bars = getBars(this.props, moreProps, yAccessor);\n\t\treturn <g className=\"react-stockcharts-bar-series\">\n\t\t\t{getBarsSVG2(this.props, bars)}\n\t\t</g>;\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tclip={clip}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nOverlayBarSeries.propTypes = {\n\tbaseAt: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func,\n\t]).isRequired,\n\tdirection: PropTypes.oneOf([\"up\", \"down\"]).isRequired,\n\tstroke: PropTypes.bool.isRequired,\n\twidthRatio: PropTypes.number.isRequired,\n\topacity: PropTypes.number.isRequired,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\txAccessor: PropTypes.func,\n\tyAccessor: PropTypes.arrayOf(PropTypes.func),\n\txScale: PropTypes.func,\n\tyScale: PropTypes.func,\n\tplotData: PropTypes.array,\n\tclip: PropTypes.bool.isRequired,\n};\n\nOverlayBarSeries.defaultProps = {\n\tbaseAt: (xScale, yScale/* , d*/) => first(yScale.range()),\n\tdirection: \"up\",\n\tclassName: \"bar\",\n\tstroke: false,\n\tfill: \"#4682B4\",\n\topacity: 1,\n\twidthRatio: 0.5,\n\twidth: plotDataLengthBarWidth,\n\tclip: true,\n};\n\nfunction getBars(props, moreProps, yAccessor) {\n\tconst { xScale, xAccessor, chartConfig: { yScale }, plotData } = moreProps;\n\tconst { baseAt, className, fill, stroke } = props;\n\n\tconst getClassName = functor(className);\n\tconst getFill = functor(fill);\n\tconst getBase = functor(baseAt);\n\tconst widthFunctor = functor(props.width);\n\n\tconst width = widthFunctor(props, moreProps);\n\tconst offset = Math.floor(0.5 * width);\n\n\t// console.log(xScale.domain(), yScale.domain());\n\n\tconst bars = plotData\n\t\t.map(d => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet innerBars = yAccessor.map((eachYAccessor, i) => {\n\t\t\t\tconst yValue = eachYAccessor(d);\n\t\t\t\tif (isNotDefined(yValue)) return undefined;\n\n\t\t\t\tconst xValue = xAccessor(d);\n\t\t\t\tconst x = Math.round(xScale(xValue)) - offset;\n\t\t\t\tconst y = yScale(yValue);\n\t\t\t\t// console.log(yValue, y, xValue, x)\n\t\t\t\treturn {\n\t\t\t\t\twidth: offset * 2,\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: y,\n\t\t\t\t\tclassName: getClassName(d, i),\n\t\t\t\t\tstroke: stroke ? getFill(d, i) : \"none\",\n\t\t\t\t\tfill: getFill(d, i),\n\t\t\t\t\ti,\n\t\t\t\t};\n\t\t\t}).filter(yValue => isDefined(yValue));\n\n\t\t\tlet b = getBase(xScale, yScale, d);\n\t\t\tlet h;\n\t\t\tfor (let i = innerBars.length - 1; i >= 0; i--) {\n\t\t\t\th = b - innerBars[i].y;\n\t\t\t\tif (h < 0) {\n\t\t\t\t\tinnerBars[i].y = b;\n\t\t\t\t\th = -1 * h;\n\t\t\t\t}\n\t\t\t\tinnerBars[i].height = h;\n\t\t\t\tb = innerBars[i].y;\n\t\t\t}\n\t\t\treturn innerBars;\n\t\t});\n\n\treturn merge(bars);\n}\n\nexport default OverlayBarSeries;\n"]}