{"version":3,"sources":["../../../src/lib/tooltip/StochasticTooltip.js"],"names":["StochasticTooltip","props","renderSVG","bind","moreProps","onClick","fontFamily","fontSize","yAccessor","displayFormat","label","interactiveMode","className","options","appearance","labelFill","displayValuesFor","chartConfig","width","height","currentItem","stroke","stochastic","K","D","originProp","origin","x","y","kLine","windowSize","kWindowSize","dLine","dWindowSize","Component","propTypes","PropTypes","oneOfType","array","func","isRequired","string","number","shape","bool","defaultProps"],"mappings":"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","file":"StochasticTooltip.js","sourcesContent":["\n\nimport { format } from \"d3-format\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport { functor } from \"../utils\";\n\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nclass StochasticTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { onClick, fontFamily, fontSize, yAccessor, displayFormat, label, interactiveMode } = this.props;\n\t\tconst { className, options, appearance, labelFill } = this.props;\n\t\tconst { displayValuesFor } = this.props;\n\t\tconst { chartConfig: { width, height } } = moreProps;\n\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\t\tconst { stroke } = appearance;\n\t\tconst stochastic = currentItem && yAccessor(currentItem);\n\n\t\tconst K = (stochastic && stochastic.K && displayFormat(stochastic.K)) || \"n/a\";\n\t\tconst D = (stochastic && stochastic.D && displayFormat(stochastic.D)) || \"n/a\";\n\n\t\tconst { origin: originProp } = this.props;\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\n\t\treturn (\n\t\t\t<g className={className} transform={`translate(${ x }, ${ y })`} onClick={onClick}>\n\t\t\t\t<ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{`${ label }${interactiveMode ? \" %K(\" : \"\"}`}</ToolTipTSpanLabel>\n\t\t\t\t\t{ interactiveMode ? (\n\t\t\t\t\t\t<tspan>\n\t\t\t\t\t\t\t<tspan fill={stroke.kLine}>{`${options.windowSize}, ${options.kWindowSize}`}</tspan>\n\t\t\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>): </ToolTipTSpanLabel>\n\t\t\t\t\t\t\t<tspan fill={stroke.kLine}>{K}</tspan>\n\t\t\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}> %D (</ToolTipTSpanLabel>\n\t\t\t\t\t\t\t<tspan fill={stroke.dLine}>{options.dWindowSize}</tspan>\n\t\t\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>): </ToolTipTSpanLabel>\n\t\t\t\t\t\t\t<tspan fill={stroke.dLine}>{D}</tspan>\n\t\t\t\t\t\t</tspan>\n\t\t\t\t\t) : null}\n\t\t\t\t</ToolTipText>\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\nStochasticTooltip.propTypes = {\n\torigin: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.func\n\t]).isRequired,\n\tclassName: PropTypes.string,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tlabelFill: PropTypes.string,\n\n\tonClick: PropTypes.func,\n\tyAccessor: PropTypes.func.isRequired,\n\toptions: PropTypes.shape({\n\t\twindowSize: PropTypes.number.isRequired,\n\t\tkWindowSize: PropTypes.number.isRequired,\n\t\tdWindowSize: PropTypes.number.isRequired,\n\t}).isRequired,\n\tappearance: PropTypes.shape({\n\t\tstroke: {\n\t\t\tdLine: PropTypes.string.isRequired,\n\t\t\tkLine: PropTypes.string.isRequired,\n\t\t}.isRequired,\n\t}).isRequired,\n\tdisplayFormat: PropTypes.func.isRequired,\n\tdisplayValuesFor: PropTypes.func,\n\tlabel: PropTypes.string.isRequired,\n\tinteractiveMode: PropTypes.bool,\n};\n\nStochasticTooltip.defaultProps = {\n\tdisplayFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 0],\n\tclassName: \"react-stockcharts-tooltip\",\n\tlabel: \"STO\",\n\tinteractiveMode: false,\n};\n\nexport default StochasticTooltip;\n"]}