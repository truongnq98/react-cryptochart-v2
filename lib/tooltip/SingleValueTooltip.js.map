{"version":3,"sources":["../../../src/lib/tooltip/SingleValueTooltip.js"],"names":["SingleValueTooltip","props","renderSVG","bind","moreProps","onClick","fontFamily","fontSize","labelFill","valueFill","className","interactiveMode","xDisplayFormat","yDisplayFormat","xLabel","yLabel","xAccessor","yAccessor","displayValuesFor","chartConfig","width","height","currentItem","xDisplayValue","yDisplayValue","originProp","origin","x","y","Component","propTypes","PropTypes","func","isRequired","string","oneOfType","array","number","bool","defaultProps","noop","identity"],"mappings":"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","file":"SingleValueTooltip.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\nimport { isDefined, identity, noop, functor } from \"../utils\";\n\nclass SingleValueTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\n\t\tconst { onClick, fontFamily, fontSize, labelFill, valueFill, className, interactiveMode } = this.props;\n\t\tconst { xDisplayFormat, yDisplayFormat, xLabel, yLabel, xAccessor, yAccessor } = this.props;\n\t\tconst { displayValuesFor } = this.props;\n\n\t\tconst { chartConfig: { width, height } } = moreProps;\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\n\t\tconst xDisplayValue = isDefined(currentItem) && isDefined(xAccessor(currentItem)) ? xDisplayFormat(xAccessor(currentItem)) : \"n/a\";\n\t\tconst yDisplayValue = isDefined(currentItem) && isDefined(yAccessor(currentItem)) ? yDisplayFormat(yAccessor(currentItem)) : \"n/a\";\n\n\t\tconst { origin: originProp } = this.props;\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\n\t\treturn (\n\t\t\t<g className={className} transform={`translate(${ x }, ${ y })`} onClick={onClick}>\n\t\t\t\t<ToolTipText x={0} y={0}\n\t\t\t\t\tfontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t\t{ xLabel ? <ToolTipTSpanLabel x={0} dy=\"5\" fill={labelFill}>{`${xLabel}${interactiveMode ? \": \" : \"\"}`}</ToolTipTSpanLabel> : null}\n\t\t\t\t\t{ xLabel ? <tspan fill={valueFill}>{`${interactiveMode ? xDisplayValue : \"\"} `}</tspan> : null}\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{`${yLabel}${interactiveMode ? \": \" : \"\"}`}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={valueFill} >{interactiveMode ? yDisplayValue : \"\"}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\nSingleValueTooltip.propTypes = {\n\txDisplayFormat: PropTypes.func,\n\tyDisplayFormat: PropTypes.func.isRequired,\n\txLabel: PropTypes.string,\n\tyLabel: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func\n\t]).isRequired,\n\tlabelFill: PropTypes.string.isRequired,\n\tvalueFill: PropTypes.string,\n\torigin: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.func\n\t]).isRequired,\n\tclassName: PropTypes.string,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tonClick: PropTypes.func,\n\tdisplayValuesFor: PropTypes.func,\n\txAccessor: PropTypes.func,\n\tyAccessor: PropTypes.func,\n\tinteractiveMode: PropTypes.bool,\n};\n\nSingleValueTooltip.defaultProps = {\n\torigin: [0, 0],\n\tlabelFill: \"#4682B4\",\n\tvalueFill: \"#000000\",\n\tyDisplayFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\txAccessor: noop,\n\tyAccessor: identity,\n\tclassName: \"react-stockcharts-tooltip\",\n\tinteractiveMode: false,\n};\n\nexport default SingleValueTooltip;\n"]}