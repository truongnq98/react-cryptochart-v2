{"version":3,"sources":["../../../../../src/lib/interactive/wrapper/EachAngle.js"],"names":["React","Component","PropTypes","ascending","d3Ascending","noop","strokeDashTypes","saveNodeType","isHover","getXValue","Angle","ClickableCircle","HoverTextNearMouse","EachAngle","props","handleEdge1Drag","bind","handleEdge2Drag","handleLineDragStart","handleLineDrag","handleEdge1DragStart","handleEdge2DragStart","handleDragComplete","handleHover","nodes","state","hover","x1Value","y1Value","x2Value","y2Value","dragStart","moreProps","index","onDrag","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","x1","y1","x2","y2","dx","dy","newX1Value","newY1Value","invert","newX2Value","newY2Value","setState","anchor","undefined","onDragComplete","getNewXY","hovering","type","stroke","strokeWidth","strokeOpacity","strokeDasharray","r","fill","fillOpacity","edgeStrokeWidth","edgeFill","fontFill","edgeStroke","edgeInteractiveCursor","lineInteractiveCursor","hoverText","selected","hoverTextEnabled","enable","restHoverTextProps","plotData","mouseY","x","domain","slice","sort","small","big","y","newY","Math","min","max","propTypes","any","isRequired","number","oneOf","func","onEdge1Drag","onEdge2Drag","onSelect","onUnSelect","defaultClassName","string","bool","object","defaultProps"],"mappings":"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","file":"EachAngle.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ascending as d3Ascending } from \"d3-array\";\nimport { noop, strokeDashTypes } from \"../../utils\";\nimport { saveNodeType, isHover } from \"../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\n\nimport Angle from \"../components/Angle\";\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\n\nclass EachAngle extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n\t\tthis.handleEdge2Drag = this.handleEdge2Drag.bind(this);\n\t\tthis.handleLineDragStart = this.handleLineDragStart.bind(this);\n\t\tthis.handleLineDrag = this.handleLineDrag.bind(this);\n\n\t\tthis.handleEdge1DragStart = this.handleEdge1DragStart.bind(this);\n\t\tthis.handleEdge2DragStart = this.handleEdge2DragStart.bind(this);\n\n\t\tthis.handleDragComplete = this.handleDragComplete.bind(this);\n\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t};\n\t}\n\thandleLineDragStart() {\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t} = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t};\n\t}\n\thandleLineDrag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t} = this.dragStart;\n\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst x1 = xScale(x1Value);\n\t\tconst y1 = yScale(y1Value);\n\t\tconst x2 = xScale(x2Value);\n\t\tconst y2 = yScale(y2Value);\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\tconst newX2Value = getXValue(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\tonDrag(index, {\n\t\t\tx1Value: newX1Value,\n\t\t\ty1Value: newY1Value,\n\t\t\tx2Value: newX2Value,\n\t\t\ty2Value: newY2Value,\n\t\t});\n\t}\n\thandleEdge1DragStart() {\n\t\tthis.setState({\n\t\t\tanchor: \"edge2\"\n\t\t});\n\t}\n\thandleEdge2DragStart() {\n\t\tthis.setState({\n\t\t\tanchor: \"edge1\"\n\t\t});\n\t}\n\thandleDragComplete(...rest) {\n\t\tthis.setState({\n\t\t\tanchor: undefined\n\t\t});\n\t\tthis.props.onDragComplete(...rest);\n\t}\n\thandleEdge1Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx2Value, y2Value,\n\t\t} = this.props;\n\n\t\tconst [x1Value, y1Value] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t});\n\t}\n\thandleEdge2Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t} = this.props;\n\n\t\tconst [x2Value, y2Value] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t});\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t\ttype,\n\t\t\tstroke,\n\t\t\tstrokeWidth,\n\t\t\tstrokeOpacity,\n\t\t\tstrokeDasharray,\n\t\t\tr,\n\t\t\tfill,\n\t\t\tfillOpacity,\n\t\t\tedgeStrokeWidth,\n\t\t\tedgeFill,\n\t\t\tfontFill,\n\t\t\tedgeStroke,\n\t\t\tedgeInteractiveCursor,\n\t\t\tlineInteractiveCursor,\n\t\t\thoverText,\n\t\t\tselected,\n\n\t\t\tonDragComplete,\n\t\t} = this.props;\n\t\tconst { hover, anchor } = this.state;\n\n\t\t// console.log(\"SELECTED ->\", selected);\n\t\tconst { enable: hoverTextEnabled, ...restHoverTextProps } = hoverText;\n\n\t\treturn <g>\n\t\t\t<Angle\n\t\t\t\tref={this.saveNodeType(\"angle\")}\n\t\t\t\tselected={selected || hover}\n\t\t\t\tonHover={this.handleHover}\n\t\t\t\tonUnHover={this.handleHover}\n\t\t\t\tx1Value={x1Value}\n\t\t\t\ty1Value={y1Value}\n\t\t\t\tx2Value={x2Value}\n\t\t\t\ty2Value={y2Value}\n\t\t\t\ttype={type}\n\t\t\t\tstroke={stroke}\n\t\t\t\tedgeStroke={edgeStroke}\n\t\t\t\tedgeStrokeWidth={edgeStrokeWidth}\n\t\t\t\tedgeFill={edgeFill}\n\t\t\t\tr={r}\n\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\n\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\tstrokeDasharray={strokeDasharray}\n\t\t\t\tfill={fill}\n\t\t\t\tfontFill={fontFill}\n\t\t\t\tfillOpacity={fillOpacity}\n\t\t\t\tinteractiveCursorClass={lineInteractiveCursor}\n\t\t\t\tonDragStart={this.handleLineDragStart}\n\t\t\t\tonDrag={this.handleLineDrag}\n\t\t\t\tonDragComplete={onDragComplete} />\n\t\t\t<ClickableCircle\n\t\t\t\tref={this.saveNodeType(\"edge1\")}\n\t\t\t\tshow={selected || hover}\n\t\t\t\tcx={x1Value}\n\t\t\t\tcy={y1Value}\n\t\t\t\tr={r}\n\t\t\t\tfill={edgeFill}\n\t\t\t\tstroke={anchor === \"edge1\" ? stroke : edgeStroke}\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\tstrokeOpacity={1}\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\tonDragStart={this.handleEdge1DragStart}\n\t\t\t\tonDrag={this.handleEdge1Drag}\n\t\t\t\tonDragComplete={this.handleDragComplete} />\n\t\t\t<ClickableCircle\n\t\t\t\tref={this.saveNodeType(\"edge2\")}\n\t\t\t\tshow={selected || hover}\n\t\t\t\tcx={x2Value}\n\t\t\t\tcy={y2Value}\n\t\t\t\tr={r}\n\t\t\t\tfill={edgeFill}\n\t\t\t\tstroke={anchor === \"edge2\" ? stroke : edgeStroke}\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\tstrokeOpacity={1}\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\tonDragStart={this.handleEdge2DragStart}\n\t\t\t\tonDrag={this.handleEdge2Drag}\n\t\t\t\tonDragComplete={this.handleDragComplete} />\n\t\t\t<HoverTextNearMouse\n\t\t\t\tshow={hoverTextEnabled && hover && !selected}\n\t\t\t\t{...restHoverTextProps} />\n\t\t</g>;\n\t}\n}\n\nexport function getNewXY(moreProps) {\n\tconst { xScale, chartConfig: { yScale }, xAccessor, plotData, mouseXY } = moreProps;\n\tconst mouseY = mouseXY[1];\n\n\tconst x = getXValue(xScale, xAccessor, mouseXY, plotData);\n\n\tconst [small, big] = yScale.domain().slice().sort(d3Ascending);\n\tconst y = yScale.invert(mouseY);\n\tconst newY = Math.min(Math.max(y, small), big);\n\n\treturn [x, newY];\n}\n\nEachAngle.propTypes = {\n\tx1Value: PropTypes.any.isRequired,\n\tx2Value: PropTypes.any.isRequired,\n\ty1Value: PropTypes.any.isRequired,\n\ty2Value: PropTypes.any.isRequired,\n\n\tindex: PropTypes.number,\n\n\ttype: PropTypes.oneOf([\n\t\t\"ANGLE\",\n\t\t\"RECTANGLE\",\n\t\t\"CIRCLE\",\n\t]).isRequired,\n\n\tonDrag: PropTypes.func.isRequired,\n\tonEdge1Drag: PropTypes.func.isRequired,\n\tonEdge2Drag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n\tonUnSelect: PropTypes.func.isRequired,\n\n\tr: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tdefaultClassName: PropTypes.string,\n\n\tselected: PropTypes.bool,\n\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\n\tedgeStrokeWidth: PropTypes.number.isRequired,\n\tedgeStroke: PropTypes.string.isRequired,\n\tedgeInteractiveCursor: PropTypes.string.isRequired,\n\tlineInteractiveCursor: PropTypes.string.isRequired,\n\tedgeFill: PropTypes.string.isRequired,\n\tfontFill: PropTypes.string.isRequired,\n\thoverText: PropTypes.object.isRequired,\n\tfill: PropTypes.string.isRequired,\n\tfillOpacity: PropTypes.number.isRequired,\n};\n\nEachAngle.defaultProps = {\n\tonDrag: noop,\n\tonEdge1Drag: noop,\n\tonEdge2Drag: noop,\n\tonDragComplete: noop,\n\tonSelect: noop,\n\tonUnSelect: noop,\n\tselected: false,\n\thoverText: {\n\t\tenable: false,\n\t}\n};\n\nexport default EachAngle;"]}