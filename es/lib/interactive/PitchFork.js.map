{"version":3,"sources":["../../../../src/lib/interactive/PitchFork.js"],"names":["React","Component","PropTypes","isDefined","isNotDefined","noop","terminate","saveNodeType","isHoverForInteractiveType","EachPitchFork","MouseLocationIndicator","HoverTextNearMouse","PitchFork","props","handleStart","bind","handleEnd","handleDragChannel","handleDrawChannel","handleDragChannelComplete","getSelectionState","nodes","state","index","newXYValue","setState","override","moreProps","channels","rest","newChannels","map","each","idx","selected","onComplete","xyValue","current","startXY","mouseMoved","finishXY","endXY","onStart","e","appearance","d","type","enabled","currentPositionRadius","currentPositionStroke","currentPositionOpacity","currentPositionStrokeWidth","hoverText","overrideIndex","tempChannel","eachAppearance","propTypes","oneOf","bool","isRequired","func","onSelect","string","number","object","array","shape","stroke","strokeOpacity","strokeWidth","fill","fillOpacity","edgeStroke","edgeFill","edgeFill2","edgeStrokeWidth","r","defaultProps","enable","bgHeight","bgWidth","text","strokeMedianOne","strokeMedianHalf"],"mappings":"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","file":"PitchFork.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isDefined, isNotDefined, noop } from \"../utils\";\nimport {\n\tterminate,\n\tsaveNodeType,\n\tisHoverForInteractiveType,\n} from \"./utils\";\nimport EachPitchFork from \"./wrapper/EachPitchFork\";\nimport MouseLocationIndicator from \"./components/MouseLocationIndicator\";\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\n\nclass PitchFork extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleStart = this.handleStart.bind(this);\n\t\tthis.handleEnd = this.handleEnd.bind(this);\n\t\tthis.handleDragChannel = this.handleDragChannel.bind(this);\n\t\tthis.handleDrawChannel = this.handleDrawChannel.bind(this);\n\t\tthis.handleDragChannelComplete = this.handleDragChannelComplete.bind(this);\n\n\t\tthis.terminate = terminate.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"channels\")\n\t\t\t.bind(this);\n\n\t\tthis.nodes = [];\n\t\tthis.state = {\n\t\t};\n\t}\n\thandleDragChannel(index, newXYValue) {\n\t\tthis.setState({\n\t\t\toverride: {\n\t\t\t\tindex,\n\t\t\t\t...newXYValue\n\t\t\t}\n\t\t});\n\t}\n\thandleDragChannelComplete(moreProps) {\n\t\tconst { override } = this.state;\n\t\tconst { channels } = this.props;\n\n\t\tif (isDefined(override)) {\n\t\t\tconst { index, ...rest } = override;\n\t\t\tconst newChannels = channels\n\t\t\t\t.map((each, idx) => idx === index\n\t\t\t\t\t? { ...each, ...rest, selected: true }\n\t\t\t\t\t: each);\n\t\t\tthis.setState({\n\t\t\t\toverride: null,\n\t\t\t}, () => {\n\t\t\t\tthis.props.onComplete(newChannels, moreProps);\n\t\t\t});\n\t\t}\n\t}\n\thandleDrawChannel(xyValue) {\n\t\tconst { current } = this.state;\n\t\tif (isDefined(current)\n\t\t\t\t&& isDefined(current.startXY)) {\n\t\t\tthis.mouseMoved = true;\n\t\t\tif (isNotDefined(current.finishXY)) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrent: {\n\t\t\t\t\t\tstartXY: current.startXY,\n\t\t\t\t\t\tendXY: xyValue,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrent: {\n\t\t\t\t\t\t...current,\n\t\t\t\t\t\tfinishXY: xyValue,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\thandleStart(xyValue) {\n\t\tconst { current } = this.state;\n\t\tif (isNotDefined(current) || isNotDefined(current.startXY)) {\n\t\t\tthis.mouseMoved = false;\n\t\t\tthis.setState({\n\t\t\t\tcurrent: {\n\t\t\t\t\tstartXY: xyValue,\n\t\t\t\t\tendXY: null,\n\t\t\t\t}\n\t\t\t}, () => {\n\t\t\t\tthis.props.onStart();\n\t\t\t});\n\t\t}\n\t}\n\thandleEnd(xyValue, moreProps, e) {\n\t\tconst { current } = this.state;\n\t\tconst { channels, appearance } = this.props;\n\t\tif (this.mouseMoved\n\t\t\t&& isDefined(current)\n\t\t\t&& isDefined(current.startXY)\n\t\t) {\n\t\t\tif (isNotDefined(current.finishXY)) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrent: {\n\t\t\t\t\t\t...current,\n\t\t\t\t\t\tfinishXY: [current.endXY[0], current.endXY[1]],\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst newChannels = [\n\t\t\t\t\t...channels.map(d => ({ ...d, selected: false })),\n\t\t\t\t\t{\n\t\t\t\t\t\t...current, selected: true,\n\t\t\t\t\t\tappearance,\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrent: null,\n\t\t\t\t}, () => {\n\n\t\t\t\t\tthis.props.onComplete(newChannels, moreProps, e);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\trender() {\n\t\tconst { appearance, type, enabled, currentPositionRadius, currentPositionStroke,\n\t\t\tcurrentPositionOpacity, currentPositionStrokeWidth, channels, hoverText\n\t\t} = this.props;\n\t\tconst { current, override } = this.state;\n\t\tconst overrideIndex = isDefined(override) ? override.index : null;\n\t\tconst tempChannel = isDefined(current) && isDefined(current.endXY)\n\t\t\t? <EachPitchFork\n\t\t\t\ttype={type}\n\t\t\t\tinteractive={false}\n\t\t\t\t{...current}\n\t\t\t\tappearance={appearance}\n\t\t\t\thoverText={hoverText} />\n\t\t\t: null;\n\n\t\treturn <g>\n\t\t\t{channels.map((each, idx) => {\n\t\t\t\tconst eachAppearance = isDefined(each.appearance)\n\t\t\t\t\t? { ...appearance, ...each.appearance }\n\t\t\t\t\t: appearance;\n\n\t\t\t\treturn <EachPitchFork\n\t\t\t\t\tkey={idx}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tref={this.saveNodeType(idx)}\n\t\t\t\t\tindex={idx}\n\t\t\t\t\tselected={each.selected}\n\t\t\t\t\thoverText={hoverText}\n\t\t\t\t\t{...(idx === overrideIndex ? override : each)}\n\t\t\t\t\tappearance={eachAppearance}\n\t\t\t\t\tonDrag={this.handleDragChannel}\n\t\t\t\t\tonDragComplete={this.handleDragChannelComplete}\n\t\t\t\t/>;\n\t\t\t})}\n\t\t\t{tempChannel}\n\t\t\t<MouseLocationIndicator\n\t\t\t\tenabled={enabled}\n\t\t\t\tsnap={false}\n\t\t\t\tr={currentPositionRadius}\n\t\t\t\tstroke={currentPositionStroke}\n\t\t\t\topacity={currentPositionOpacity}\n\t\t\t\tstrokeWidth={currentPositionStrokeWidth}\n\t\t\t\tonMouseDown={this.handleStart}\n\t\t\t\tonClick={this.handleEnd}\n\t\t\t\tonMouseMove={this.handleDrawChannel} />\n\t\t</g>;\n\t}\n}\n\n\nPitchFork.propTypes = {\n\ttype: PropTypes.oneOf([\n\t\t\"PITCHFORK\", // extends from -Infinity to +Infinity\n\t\t\"TRIANGLE\", // extends to +/-Infinity in one direction\n\t]),\n\tenabled: PropTypes.bool.isRequired,\n\n\tonStart: PropTypes.func.isRequired,\n\tonComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n\n\tcurrentPositionStroke: PropTypes.string,\n\tcurrentPositionStrokeWidth: PropTypes.number,\n\tcurrentPositionOpacity: PropTypes.number,\n\tcurrentPositionRadius: PropTypes.number,\n\n\thoverText: PropTypes.object.isRequired,\n\tchannels: PropTypes.array.isRequired,\n\n\tappearance: PropTypes.shape({\n\t\tstroke: PropTypes.string.isRequired,\n\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\tfill: PropTypes.string.isRequired,\n\t\tfillOpacity: PropTypes.number.isRequired,\n\t\tedgeStroke: PropTypes.string.isRequired,\n\t\tedgeFill: PropTypes.string.isRequired,\n\t\tedgeFill2: PropTypes.string.isRequired,\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\n\t\tr: PropTypes.number.isRequired,\n\t}).isRequired\n};\n\nPitchFork.defaultProps = {\n\ttype: \"PITCHFORK\",\n\tonStart: noop,\n\tonComplete: noop,\n\tonSelect: noop,\n\n\tcurrentPositionStroke: \"#000000\",\n\tcurrentPositionOpacity: 1,\n\tcurrentPositionStrokeWidth: 3,\n\tcurrentPositionRadius: 4,\n\n\thoverText: {\n\t\t...HoverTextNearMouse.defaultProps,\n\t\tenable: true,\n\t\tbgHeight: 18,\n\t\tbgWidth: 90,\n\t\ttext: \"Click to select\",\n\t},\n\tchannels: [],\n\tappearance: {\n\t\tstroke: \"#990000\",\n\t\tstrokeMedianOne: \"#000099\",\n\t\tstrokeMedianHalf: \"#009B00\",\n\t\tstrokeOpacity: 0.5,\n\t\tstrokeWidth: 1,\n\t\tfill: \"#8AAFE2\",\n\t\tfillOpacity: 0.4,\n\t\tedgeStroke: \"#000000\",\n\t\tedgeFill: \"#FFFFFF\",\n\t\tedgeFill2: \"#FFFFFF\",\n\t\tedgeStrokeWidth: 0.7,\n\t\tr: 5,\n\t}\n};\n\nexport default PitchFork;\n"]}