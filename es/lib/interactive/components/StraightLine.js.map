{"version":3,"sources":["../../../../../src/lib/interactive/components/StraightLine.js"],"names":["React","Component","PropTypes","GenericChartComponent","getMouseCanvas","isDefined","noop","hexToRGBA","getStrokeDasharray","strokeDashTypes","StraightLine","props","renderSVG","bind","drawOnCanvas","isHover","moreProps","tolerance","onHover","type","x1Value","x2Value","mouseXY","xScale","x1","x2","y1Value","y2Value","yScale","chartConfig","hovering","isHovering","ctx","stroke","strokeWidth","strokeOpacity","strokeDasharray","lineWidth","strokeStyle","setLineDash","split","helperArea","beginLine","endLine","fill","fillOpacity","fillStyle","beginPath","moveTo","y1","lineTo","y2","helper","headlen","angle","Math","atan2","cos","PI","sin","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","isHovering2","start","end","mouseX","mouseY","m","getSlope","b","getYIntercept","y","min","max","line","generateLine","modLine","startLine","x3","y3","x4","y4","undefined","getXLineCoordinates","getRayCoordinates","getLineCoordinates","domain","xBegin","xFinish","yBegin","yFinish","propTypes","any","isRequired","string","number","oneOf","onEdge1Drag","func","onEdge2Drag","defaultClassName","r","withEdge","bool","children","defaultProps","edgeStrokeWidth","edgeStroke","edgeFill"],"mappings":"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","file":"StraightLine.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\n\nimport {\n\tisDefined,\n\tnoop,\n\thexToRGBA,\n\tgetStrokeDasharray,\n\tstrokeDashTypes,\n} from \"../../utils\";\n\nclass StraightLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { tolerance, onHover, type } = this.props;\n\n\t\tif (isDefined(onHover)) {\n\t\t\tif (type === \"SELECT\") {\n\t\t\t\tconst { x1Value, x2Value } = this.props;\n\t\t\t\tconst { mouseXY, xScale } = moreProps;\n\t\t\t\tconst x1 = xScale(x1Value);\n\t\t\t\tconst x2 = xScale(x2Value);\n\t\t\t\treturn (x1 <= mouseXY[0] + tolerance && x1 >= mouseXY[0] - tolerance) ||\n\t\t\t\t\t\t\t(x2 <= mouseXY[0] + tolerance && x2 >= mouseXY[0] - tolerance);\n\t\t\t} else {\n\t\t\t\tconst { x1Value, x2Value, y1Value, y2Value, type } = this.props;\n\t\t\t\tconst { mouseXY, xScale } = moreProps;\n\t\t\t\tconst { chartConfig: { yScale } } = moreProps;\n\t\t\t\tconst hovering = isHovering({\n\t\t\t\t\tx1Value, y1Value,\n\t\t\t\t\tx2Value, y2Value,\n\t\t\t\t\tmouseXY,\n\t\t\t\t\ttype,\n\t\t\t\t\ttolerance,\n\t\t\t\t\txScale,\n\t\t\t\t\tyScale,\n\t\t\t\t});\n\t\t\t\treturn hovering;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { stroke, strokeWidth, strokeOpacity, strokeDasharray, type } = this.props;\n\n\t\tctx.lineWidth = strokeWidth;\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\t\tctx.setLineDash(getStrokeDasharray(strokeDasharray).split(\",\"));\n\n\t\tif (type === \"SELECT\") {\n\t\t\tconst { beginLine, endLine } = helperArea(this.props, moreProps);\n\t\t\tconst { fill, fillOpacity } = this.props;\n\t\t\tctx.fillStyle = hexToRGBA(fill, fillOpacity);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(beginLine.x1, beginLine.y1);\n\t\t\tctx.lineTo(beginLine.x2, beginLine.y2);\n\t\t\tctx.lineTo(endLine.x2, endLine.y2);\n\t\t\tctx.lineTo(endLine.x1, endLine.y1);\n\t\t\tctx.lineTo(beginLine.x1, beginLine.y1);\n\t\t\tctx.stroke();\n\t\t\tctx.fill();\n\t\t} else {\n\t\t\tconst { x1, y1, x2, y2 } = helper(this.props, moreProps);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tif (type === \"ARROW\") {\n\t\t\t\tconst headlen = 20;\n\t\t\t\tconst angle = Math.atan2(y2 - y1, x2 - x1);\n\t\t\t\tctx.lineTo(x2 - headlen * Math.cos(angle - Math.PI / 6), y2 - headlen * Math.sin(angle - Math.PI / 6));\n\t\t\t\tctx.moveTo(x2, y2);\n\t\t\t\tctx.lineTo(x2 - headlen * Math.cos(angle + Math.PI / 6), y2 - headlen * Math.sin(angle + Math.PI / 6));\n\t\t\t}\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { stroke, strokeWidth, strokeOpacity, strokeDasharray } = this.props;\n\n\t\tconst lineWidth = strokeWidth;\n\n\t\tconst { x1, y1, x2, y2 } = helper(this.props, moreProps);\n\t\treturn (\n\t\t\t<line\n\t\t\t\tx1={x1} y1={y1} x2={x2} y2={y2}\n\t\t\t\tstroke={stroke} strokeWidth={lineWidth}\n\t\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\n\t\t\t\tstrokeOpacity={strokeOpacity} />\n\t\t);\n\t}\n\trender() {\n\t\tconst { selected, interactiveCursorClass } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete, onHover, onUnHover } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tisHover={this.isHover}\n\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\tselected={selected}\n\n\t\t\tonDragStart={onDragStart}\n\t\t\tonDrag={onDrag}\n\t\t\tonDragComplete={onDragComplete}\n\t\t\tonHover={onHover}\n\t\t\tonUnHover={onUnHover}\n\n\t\t\tdrawOn={[\"mousemove\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\n\nexport function isHovering2(start, end, [mouseX, mouseY], tolerance) {\n\tconst m = getSlope(start, end);\n\n\tif (isDefined(m)) {\n\t\tconst b = getYIntercept(m, end);\n\t\tconst y = m * mouseX + b;\n\t\treturn (mouseY < y + tolerance)\n\t\t\t&& mouseY > (y - tolerance)\n\t\t\t&& mouseX > Math.min(start[0], end[0]) - tolerance\n\t\t\t&& mouseX < Math.max(start[0], end[0]) + tolerance;\n\t} else {\n\t\treturn mouseY >= Math.min(start[1], end[1])\n\t\t\t&& mouseY <= Math.max(start[1], end[1])\n\t\t\t&& mouseX < start[0] + tolerance\n\t\t\t&& mouseX > start[0] - tolerance;\n\t}\n}\n\nexport function isHovering({\n\tx1Value, y1Value,\n\tx2Value, y2Value,\n\tmouseXY,\n\ttype,\n\ttolerance,\n\txScale,\n\tyScale,\n}) {\n\n\tconst line = generateLine({\n\t\ttype,\n\t\tstart: [x1Value, y1Value],\n\t\tend: [x2Value, y2Value],\n\t\txScale,\n\t\tyScale,\n\t});\n\n\tconst start = [xScale(line.x1), yScale(line.y1)];\n\tconst end = [xScale(line.x2), yScale(line.y2)];\n\n\tconst m = getSlope(start, end);\n\tconst [mouseX, mouseY] = mouseXY;\n\n\tif (isDefined(m)) {\n\t\tconst b = getYIntercept(m, end);\n\t\tconst y = m * mouseX + b;\n\n\t\treturn mouseY < (y + tolerance)\n\t\t\t&& mouseY > (y - tolerance)\n\t\t\t&& mouseX > Math.min(start[0], end[0]) - tolerance\n\t\t\t&& mouseX < Math.max(start[0], end[0]) + tolerance;\n\t} else {\n\t\treturn mouseY >= Math.min(start[1], end[1])\n\t\t\t&& mouseY <= Math.max(start[1], end[1])\n\t\t\t&& mouseX < start[0] + tolerance\n\t\t\t&& mouseX > start[0] - tolerance;\n\t}\n}\n\nfunction helper(props, moreProps) {\n\tconst { x1Value, x2Value, y1Value, y2Value, type } = props;\n\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst modLine = generateLine({\n\t\ttype,\n\t\tstart: [x1Value, y1Value],\n\t\tend: [x2Value, y2Value],\n\t\txScale,\n\t\tyScale,\n\t});\n\n\tconst x1 = xScale(modLine.x1);\n\tconst y1 = yScale(modLine.y1);\n\tconst x2 = xScale(modLine.x2);\n\tconst y2 = yScale(modLine.y2);\n\n\treturn {\n\t\tx1, y1, x2, y2\n\t};\n}\n\nfunction helperArea(props, moreProps) {\n\tconst { x1Value, x2Value, y1Value, y2Value, type } = props;\n\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst { startLine, endLine } = generateLine({\n\t\ttype,\n\t\tstart: [x1Value, y1Value],\n\t\tend: [x2Value, y2Value],\n\t\txScale,\n\t\tyScale,\n\t});\n\n\tconst x1 = xScale(startLine.x1);\n\tconst y1 = yScale(startLine.y1);\n\tconst x2 = xScale(startLine.x2);\n\tconst y2 = yScale(startLine.y2);\n\n\tconst x3 = xScale(endLine.x1);\n\tconst y3 = yScale(endLine.y1);\n\tconst x4 = xScale(endLine.x2);\n\tconst y4 = yScale(endLine.y2);\n\n\treturn {\n\t\tbeginLine: {\n\t\t\tx1, y1, x2, y2,\n\t\t},\n\t\tendLine: {\n\t\t\tx1: x3, y1: y3, x2: x4, y2: y4,\n\t\t}\n\t};\n}\n\nexport function getSlope(start, end) {\n\tconst m /* slope */ = end[0] === start[0]\n\t\t? undefined\n\t\t: (end[1] - start[1]) / (end[0] - start[0]);\n\treturn m;\n}\nexport function getYIntercept(m, end) {\n\tconst b /* y intercept */ = -1 * m * end[0] + end[1];\n\treturn b;\n}\n\nexport function generateLine({\n\ttype, start, end, xScale, yScale\n}) {\n\tconst m /* slope */ = getSlope(start, end);\n\t// console.log(end[0] - start[0], m)\n\tconst b /* y intercept */ = getYIntercept(m, start);\n\tswitch (type) {\n\t\tcase \"XLINE\":\n\t\t\treturn getXLineCoordinates({\n\t\t\t\ttype, start, end, xScale, yScale, m, b\n\t\t\t});\n\t\tcase \"RAY\":\n\t\t\treturn getRayCoordinates({\n\t\t\t\ttype, start, end, xScale, yScale, m, b\n\t\t\t});\n\t\tcase \"LINE\":\n\t\t\treturn getLineCoordinates({\n\t\t\t\ttype, start, end, xScale, yScale, m, b\n\t\t\t});\n\t\tcase \"ARROW\":\n\t\t\treturn getLineCoordinates({\n\t\t\t\ttype, start, end, xScale, yScale, m, b\n\t\t\t});\n\t\tcase \"SELECT\":\n\t\t\treturn {\n\t\t\t\tstartLine: getXLineCoordinates({\n\t\t\t\t\ttype, start, end: [start[0], start[1] - 1], xScale, yScale, m, b\n\t\t\t\t}),\n\t\t\t\tendLine: getXLineCoordinates({\n\t\t\t\t\ttype, start: [end[0], end[1] - 1], end, xScale, yScale, m, b\n\t\t\t\t})\n\t\t\t};\n\t}\n}\n\nexport function getXLineCoordinates({\n\tstart, end, xScale, yScale, m, b\n}) {\n\tconst [xBegin, xFinish] = xScale.domain();\n\tconst [yBegin, yFinish] = yScale.domain();\n\n\tif (end[0] === start[0]) {\n\t\treturn {\n\t\t\tx1: end[0], y1: yBegin,\n\t\t\tx2: end[0], y2: yFinish,\n\t\t};\n\t}\n\tconst [x1, x2] = end[0] > start[0]\n\t\t? [xBegin, xFinish]\n\t\t: [xFinish, xBegin];\n\n\treturn {\n\t\tx1, y1: m * x1 + b,\n\t\tx2, y2: m * x2 + b\n\t};\n}\n\nexport function getRayCoordinates({\n\tstart, end, xScale, yScale, m, b\n}) {\n\tconst [xBegin, xFinish] = xScale.domain();\n\tconst [yBegin, yFinish] = yScale.domain();\n\n\tconst x1 = start[0];\n\tif (end[0] === start[0]) {\n\t\treturn {\n\t\t\tx1,\n\t\t\ty1: start[1],\n\t\t\tx2: x1,\n\t\t\ty2: end[1] > start[1] ? yFinish : yBegin,\n\t\t};\n\t}\n\n\tconst x2 = end[0] > start[0]\n\t\t? xFinish\n\t\t: xBegin;\n\n\treturn {\n\t\tx1, y1: m * x1 + b,\n\t\tx2, y2: m * x2 + b\n\t};\n}\n\nfunction getLineCoordinates({\n\tstart, end\n}) {\n\n\tconst [x1, y1] = start;\n\tconst [x2, y2] = end;\n\tif (end[0] === start[0]) {\n\t\treturn {\n\t\t\tx1,\n\t\t\ty1: start[1],\n\t\t\tx2: x1,\n\t\t\ty2: end[1],\n\t\t};\n\t}\n\n\treturn {\n\t\tx1, y1,\n\t\tx2, y2,\n\t};\n}\n\nStraightLine.propTypes = {\n\tx1Value: PropTypes.any.isRequired,\n\tx2Value: PropTypes.any.isRequired,\n\ty1Value: PropTypes.any.isRequired,\n\ty2Value: PropTypes.any.isRequired,\n\n\tinteractiveCursorClass: PropTypes.string,\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\n\ttype: PropTypes.oneOf([\n\t\t\"XLINE\", // extends from -Infinity to +Infinity\n\t\t\"RAY\", // extends to +/-Infinity in one direction\n\t\t\"LINE\", // extends between the set bounds\n\t\t\"ARROW\", // arrow\n\t\t\"SELECT\", // select area\n\t]).isRequired,\n\n\tonEdge1Drag: PropTypes.func.isRequired,\n\tonEdge2Drag: PropTypes.func.isRequired,\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\n\tr: PropTypes.number.isRequired,\n\twithEdge: PropTypes.bool.isRequired,\n\tchildren: PropTypes.func.isRequired,\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n\tfill: PropTypes.string.isRequired,\n\tfillOpacity: PropTypes.number.isRequired,\n};\n\nStraightLine.defaultProps = {\n\tonEdge1Drag: noop,\n\tonEdge2Drag: noop,\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\n\tedgeStrokeWidth: 3,\n\tedgeStroke: \"#000000\",\n\tedgeFill: \"#FFFFFF\",\n\tr: 10,\n\twithEdge: false,\n\tstrokeWidth: 1,\n\tstrokeDasharray: \"Solid\",\n\tchildren: noop,\n\ttolerance: 7,\n\tselected: false,\n\tfill: \"#8AAFE2\",\n\tfillOpacity: 0.5,\n};\n\nexport default StraightLine;\n"]}