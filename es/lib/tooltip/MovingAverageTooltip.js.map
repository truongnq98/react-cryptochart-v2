{"version":3,"sources":["../../../../src/lib/tooltip/MovingAverageTooltip.js"],"names":["React","Component","PropTypes","format","displayValuesFor","GenericChartComponent","ToolTipText","ToolTipTSpanLabel","functor","SingleMAToolTip","props","handleClick","bind","e","onClick","forChart","options","chartId","textFill","labelFill","interactiveMode","translate","origin","fontFamily","fontSize","displayName","value","propTypes","array","isRequired","color","string","func","number","oneOfType","object","MovingAverageTooltip","renderSVG","moreProps","chartConfig","className","width","originProp","displayFormat","height","currentItem","config","x","y","ox","oy","map","each","idx","yValue","yAccessor","tooltipLabel","windowSize","type","yDisplayValue","stroke","arrayOf","shape","echo","any","bool","defaultProps"],"mappings":"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","file":"MovingAverageTooltip.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nimport { functor } from \"../utils\";\n\nclass SingleMAToolTip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick(e) {\n\t\tconst { onClick, forChart, options } = this.props;\n\t\tonClick({ chartId: forChart, ...options }, e);\n\t}\n\trender() {\n\t\tconst { textFill, labelFill, interactiveMode } = this.props;\n\t\tconst translate = \"translate(\" + this.props.origin[0] + \", \" + this.props.origin[1] + \")\";\n\t\treturn (\n\t\t\t<g transform={translate}>\n\t\t\t\t<ToolTipText x={5} y={11}\n\t\t\t\t\tfontFamily={this.props.fontFamily} fontSize={this.props.fontSize}>\n\t\t\t\t\t<tspan x=\"5\" dy=\"15\" fill={textFill}><ToolTipTSpanLabel fill={labelFill}>{this.props.displayName}{interactiveMode ? \": \" : \"\"}</ToolTipTSpanLabel>{interactiveMode ? this.props.value : \"\"}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t\t<rect x={0} y={0} width={55} height={30}\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tfill=\"none\" stroke=\"none\" />\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nSingleMAToolTip.propTypes = {\n\torigin: PropTypes.array.isRequired,\n\tcolor: PropTypes.string.isRequired,\n\tdisplayName: PropTypes.string.isRequired,\n\tvalue: PropTypes.string.isRequired,\n\tonClick: PropTypes.func,\n\tfontFamily: PropTypes.string,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tforChart: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\toptions: PropTypes.object.isRequired,\n};\n\nclass MovingAverageTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { displayValuesFor, interactiveMode } = this.props;\n\n\t\tconst { chartId } = moreProps;\n\t\tconst { chartConfig } = moreProps;\n\n\t\tconst { className, onClick, width, fontFamily, fontSize, textFill, labelFill } = this.props;\n\t\tconst { origin: originProp, displayFormat, options } = this.props;\n\t\tconst { chartConfig: { height } } = moreProps;\n\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\t\tconst config = chartConfig;\n\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\t\tconst [ox, oy] = config.origin;\n\n\t\treturn (\n\t\t\t<g transform={`translate(${ ox + x }, ${ oy + y })`} className={className}>\n\t\t\t\t{options\n\t\t\t\t\t.map((each, idx) => {\n\t\t\t\t\t\tconst yValue = currentItem && each.yAccessor(currentItem);\n\n\t\t\t\t\t\tconst tooltipLabel = each.windowSize ? `${each.type} (${each.windowSize})` : `${each.type}`;\n\t\t\t\t\t\tconst yDisplayValue = yValue ? displayFormat(yValue) : \"n/a\";\n\t\t\t\t\t\treturn <SingleMAToolTip\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\torigin={[width * idx, 0]}\n\t\t\t\t\t\t\tcolor={each.stroke}\n\t\t\t\t\t\t\tdisplayName={tooltipLabel}\n\t\t\t\t\t\t\tvalue={yDisplayValue}\n\t\t\t\t\t\t\toptions={each}\n\t\t\t\t\t\t\tforChart={chartId}\n\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\tfontFamily={fontFamily}\n\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\ttextFill={textFill}\n\t\t\t\t\t\t\tlabelFill={labelFill}\n\t\t\t\t\t\t\tinteractiveMode={interactiveMode}\n\t\t\t\t\t\t/>;\n\t\t\t\t\t})}\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\nMovingAverageTooltip.propTypes = {\n\tclassName: PropTypes.string,\n\tdisplayFormat: PropTypes.func.isRequired,\n\torigin: PropTypes.array.isRequired,\n\tdisplayValuesFor: PropTypes.func,\n\tonClick: PropTypes.func,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\twidth: PropTypes.number,\n\toptions: PropTypes.arrayOf(PropTypes.shape({\n\t\tyAccessor: PropTypes.func.isRequired,\n\t\ttype: PropTypes.string.isRequired,\n\t\tstroke: PropTypes.string.isRequired,\n\t\twindowSize: PropTypes.number,\n\t\techo: PropTypes.any,\n\t})),\n\tinteractiveMode: PropTypes.bool,\n};\n\nMovingAverageTooltip.defaultProps = {\n\tclassName: \"react-stockcharts-tooltip react-stockcharts-moving-average-tooltip\",\n\tdisplayFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 10],\n\twidth: 65,\n\tinteractiveMode: false,\n};\n\nexport default MovingAverageTooltip;\n"]}